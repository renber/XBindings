/***********************************************************************************************************************
 * 
 * BetterBeansBinding - keeping JavaBeans in sync
 * ==============================================
 * 
 * Copyright (C) 2009 by Tidalwave s.a.s. (http://www.tidalwave.it)
 * http://betterbeansbinding.kenai.com
 * 
 * This is derived work from BeansBinding: http://beansbinding.dev.java.net
 * BeansBinding is copyrighted (C) by Sun Microsystems, Inc.
 * 
 ***********************************************************************************************************************
 * 
 * This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General 
 * Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) 
 * any later version.
 * 
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more 
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to 
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 * 
 ***********************************************************************************************************************
 * 
 * $Id: ELParserTreeConstants.java 49 2009-04-25 22:31:22Z fabriziogiudici $
 * 
 **********************************************************************************************************************/
/*
 * Copyright (C) 2007 Sun Microsystems, Inc. All rights reserved. Use is
 * subject to license terms.
 *
 *//* Generated By:JJTree: Do not edit this line. ELParserTreeConstants.java */

package org.jdesktop.el.impl.parser;

public interface ELParserTreeConstants
{
  public int JJTCOMPOSITEEXPRESSION = 0;
  public int JJTLITERALEXPRESSION = 1;
  public int JJTDEFERREDEXPRESSION = 2;
  public int JJTDYNAMICEXPRESSION = 3;
  public int JJTVOID = 4;
  public int JJTCHOICE = 5;
  public int JJTOR = 6;
  public int JJTAND = 7;
  public int JJTEQUAL = 8;
  public int JJTNOTEQUAL = 9;
  public int JJTLESSTHAN = 10;
  public int JJTGREATERTHAN = 11;
  public int JJTLESSTHANEQUAL = 12;
  public int JJTGREATERTHANEQUAL = 13;
  public int JJTPLUS = 14;
  public int JJTMINUS = 15;
  public int JJTMULT = 16;
  public int JJTDIV = 17;
  public int JJTMOD = 18;
  public int JJTNEGATIVE = 19;
  public int JJTNOT = 20;
  public int JJTEMPTY = 21;
  public int JJTVALUE = 22;
  public int JJTDOTSUFFIX = 23;
  public int JJTBRACKETSUFFIX = 24;
  public int JJTIDENTIFIER = 25;
  public int JJTFUNCTION = 26;
  public int JJTTRUE = 27;
  public int JJTFALSE = 28;
  public int JJTFLOATINGPOINT = 29;
  public int JJTINTEGER = 30;
  public int JJTSTRING = 31;
  public int JJTNULL = 32;


  public String[] jjtNodeName = {
    "CompositeExpression",
    "LiteralExpression",
    "DeferredExpression",
    "DynamicExpression",
    "void",
    "Choice",
    "Or",
    "And",
    "Equal",
    "NotEqual",
    "LessThan",
    "GreaterThan",
    "LessThanEqual",
    "GreaterThanEqual",
    "Plus",
    "Minus",
    "Mult",
    "Div",
    "Mod",
    "Negative",
    "Not",
    "Empty",
    "Value",
    "DotSuffix",
    "BracketSuffix",
    "Identifier",
    "Function",
    "True",
    "False",
    "FloatingPoint",
    "Integer",
    "String",
    "Null",
  };
}
